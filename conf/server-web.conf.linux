server {
    listen 443 ssl http2;
    server_name  localhost;
    default_type  text/html;
    charset utf-8;

    # 为 SNI 域名动态处理颁发或返回证书
    ssl_certificate_by_lua_block {
        auto_ssl:ssl_certificate()
    }

    # 定义静态的 ssl 证书文件用于 nginx 的启动
    #
    # 生成备用的自签名证书
    #
    # openssl req -new -newkey rsa:2048 -days 3650 -nodes -x509 \
    #   -subj '/CN=sni-support-required-for-valid-ssl' \
    #   -keyout /usr/local/openresty/ssl/resty-auto-ssl-fallback.key \
    #   -out /usr/local/openresty/ssl/resty-auto-ssl-fallback.crt
    ssl_certificate /usr/local/openresty/ssl/resty-auto-ssl-fallback.crt;
    ssl_certificate_key /usr/local/openresty/ssl/resty-auto-ssl-fallback.key;

    lua_code_cache on;


    # 默认读取 body
    # 强制本模块读取请求体，此方法不推荐，使用 ngx.req.read_body 代替
    # lua_need_request_body on;

    # 设置`lua-resty-templates`模板路径
    # Linux OpenResty nginx命令在conf, lua等文件夹同一级中的sbin文件夹下，故z_blog_openresty在conf, lua等文件夹同一级的话，需要往上退出一个文件夹。
    # Linux OpenResty 若将sbin下的nginx命令移动到conf, lua等文件夹同一级，则可以和Windows版本设置$template_root命令一直，不用再使用../，直接使用z_blog_openresty/template
    set $template_root ../z_blog_openresty/templates;

    # socket超时时间，比如链接PostgreSQL数据库5秒还连不上自动断开
    lua_socket_connect_timeout 2s;

    location /admin {
        alias z_blog_openresty/admin;
        try_files $uri $uri/ /index.html last;
        index  index.html;
    }

    location /api/ {
        proxy_connect_timeout 5; # 单位：秒
        proxy_pass http://127.0.0.1:9527/;
    }

    location ~ /(favicon.ico|qrcode.png|robots.txt){
        root z_blog_openresty/resources/;
        expires 30d;
    }

    location ~* ^/uploads/img/.*?\.(jpe?g|png|gif|svg)$ {
        valid_referers none blocked server_names ~($host);
        if ($invalid_referer) {
            return 403;
        }
        expires max;
        root z_blog_openresty/resources/;
    }

    location = / {
        access_by_lua_file z_blog_openresty/src/access/http_get.lua;
        content_by_lua_file z_blog_openresty/src/content/web/index.lua;
        log_by_lua_file z_blog_openresty/src/log/stat.lua;
    }

    location ~ ^/p/([0-9]+)\.html$ { # 转义.
#        set $post_id $1; = ngx.var[1]
        access_by_lua_file z_blog_openresty/src/access/http_get.lua;
        content_by_lua_file z_blog_openresty/src/content/web/post.lua;
        log_by_lua_file z_blog_openresty/src/log/stat.lua;
    }

    location ~ ^/topic/([\s\S]+)\.html$ {
        access_by_lua_file z_blog_openresty/src/access/http_get.lua;
        content_by_lua_file z_blog_openresty/src/content/web/topic.lua;
        log_by_lua_file z_blog_openresty/src/log/stat.lua;
    }

    location ~ ^/search/([\s\S]+)\.html$ {
        access_by_lua_file z_blog_openresty/src/access/http_get.lua;
        content_by_lua_file z_blog_openresty/src/content/web/search.lua;
        log_by_lua_file z_blog_openresty/src/log/stat.lua;
    }

    location = /post/like {
        default_type 'applicaiton/json;charset=utf8';
        access_by_lua_file z_blog_openresty/src/access/http_post.lua;
        content_by_lua_file z_blog_openresty/src/content/web/post_like.lua;
        log_by_lua_file z_blog_openresty/src/log/stat.lua;
    }

    location = /post/comment {
        default_type 'applicaiton/json;charset=utf8';
        access_by_lua_file z_blog_openresty/src/access/http_post.lua;
        content_by_lua_file z_blog_openresty/src/content/web/post_comment.lua;
        log_by_lua_file z_blog_openresty/src/log/stat.lua;
    }

    location = /post/random {
        default_type 'applicaiton/json;charset=utf8';
        access_by_lua_file z_blog_openresty/src/access/http_post.lua;
        content_by_lua_file z_blog_openresty/src/content/web/post_random.lua;
        log_by_lua_file z_blog_openresty/src/log/stat.lua;
    }

    location = /message-board.html {
        access_by_lua_file z_blog_openresty/src/access/http_get.lua;
        content_by_lua_file z_blog_openresty/src/content/web/message_board.lua;
        log_by_lua_file z_blog_openresty/src/log/stat.lua;
    }

    location = /leave-a-message {
        default_type 'applicaiton/json;charset=utf8';
        access_by_lua_file z_blog_openresty/src/access/http_post.lua;
        content_by_lua_file z_blog_openresty/src/content/web/leave_a_message.lua;
        log_by_lua_file z_blog_openresty/src/log/stat.lua;
    }

    location = /english.html {
        access_by_lua_file z_blog_openresty/src/access/http_get.lua;
        content_by_lua_file z_blog_openresty/src/content/web/english.lua;
        log_by_lua_file z_blog_openresty/src/log/stat.lua;
    }

    location = /query/ip {
        default_type 'applicaiton/json;charset=utf8';
        access_by_lua_file z_blog_openresty/src/access/http_post.lua;
        content_by_lua_file z_blog_openresty/src/content/web/query_ip.lua;
        log_by_lua_file z_blog_openresty/src/log/stat.lua;
    }

    location ~ ^/tool/(json|timestamp|ip|svg|pwd|md5|base64|url|number)\.html$ {
        access_by_lua_file z_blog_openresty/src/access/http_get.lua;
        content_by_lua_file z_blog_openresty/src/content/web/tool.lua;
        log_by_lua_file z_blog_openresty/src/log/stat.lua;
    }

    location ~ ^/sitemap(_google)?\.xml$ {
        default_type text/xml;
        access_by_lua_file z_blog_openresty/src/access/http_get.lua;
        content_by_lua_file z_blog_openresty/src/content/web/sitemap.lua;
        log_by_lua_file z_blog_openresty/src/log/stat.lua;
    }

    location = /import/es {
        content_by_lua_file z_blog_openresty/src/content/web/es_import.lua;
    }

    location / { # 定向到这都呈现404页面，这样做是为了统计访问的错误url
        access_by_lua_file z_blog_openresty/src/access/http_get.lua;
        content_by_lua_file z_blog_openresty/src/content/web/not_found.lua;
        log_by_lua_file z_blog_openresty/src/log/stat.lua;
    }

    error_page 404 500 502 503 504 @err;
    # error_page 404 500 502 503 504 =200 /404.html; # 修改状态码为200，状态码不为200将不开启gzip压缩
    # error_page 404 500 502 503 504 = /404.html; # 等同于修改状态码为200
    # 404页面每次统计到的url都是/404，故只用作异常重定向
    location @err { # @name方式只能内部访问
        access_by_lua_file z_blog_openresty/src/access/http_get.lua;
        content_by_lua_file z_blog_openresty/src/content/web/not_found.lua;
    }

}

# HTTP server
server {
    listen 80;

    # 该节点路径用于 Let's Encrypt 域名校验
    location /.well-known/acme-challenge/ {
        content_by_lua_block {
            auto_ssl:challenge_server()
        }
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# 内部开启一个监听8999的服务用于处理认证任务
server {
    listen 127.0.0.1:8999;

    # 增加 body buffer size 以保证所有的 POST 请求能正常解析返回的 POST 报文并保存到内存中
    client_body_buffer_size 128k;
    client_max_body_size 128k;

    location / {
        content_by_lua_block {
            auto_ssl:hook_server()
        }
    }
}